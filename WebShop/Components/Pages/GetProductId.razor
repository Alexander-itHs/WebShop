@page "/product/{id:int}"
@inject ProductsController productsController
@rendermode InteractiveServer
@attribute [StreamRendering]


<div class="card mb-3" style="max-width: 540px;">
    <div class="row g-0">
        <div class="col-md-4">
            @if (getProduct?.Images != null && getProduct.Images.Count() > 0)
            {
                <img src="@getProduct.Images[0].URL" class="card-img-top" alt="...">
            }
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <h5 class="card-title">Card title</h5>
                <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                <p class="card-text"><small class="text-body-secondary">Last updated 3 mins ago</small></p>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private GetProductDTO? getProduct { get; set; } = new GetProductDTO();
   

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            getProduct = await productsController.GetProduct(Id);
        }
    }

}
